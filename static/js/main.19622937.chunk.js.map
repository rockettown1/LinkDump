{"version":3,"sources":["constants.js","components/Header.js","components/Link.js","components/LinkList.js","components/CreateLink.js","components/Login.js","components/App.js","serviceWorker.js","index.js"],"names":["AUTH_TOKEN","Header","_this","this","authToken","localStorage","getItem","log","paddingLeft","react_default","a","createElement","className","react_router_dom","to","style","paddingRight","onClick","removeItem","props","history","push","Component","withRouter","VOTE_MUTATION","gql","_templateObject","Link","index","react_apollo_esm","mutation","variables","linkId","link","id","update","store","_ref","vote","data","updateStoreAfterVote","voteMutation","description","href","url","votes","length","postedBy","name","FEED_QUERY","LinkList_templateObject","NEW_LINKS_SUBSCRIPTION","_templateObject2","NEW_VOTES_SUBSCRIPTION","_templateObject3","LinkList","_updateCacheAfterVote","createVote","readQuery","query","feed","links","find","writeQuery","_subscribeToNewLinks","subscribeToMore","document","updateQuery","prev","subscriptionData","newLink","_ref2","Object","assign","concat","toConsumableArray","count","__typename","_subscribeToNewVotes","_this2","_ref3","loading","error","linksToRender","map","components_Link","key","POST_MUTATION","CreateLink_templateObject","CreateLink","state","_this$state","value","onChange","e","setState","target","type","placeholder","onCompleted","post","unshift","postMutation","SIGNUP_MUTATION","Login_templateObject","LOGIN_MUTATION","Login_templateObject2","Login","login","email","password","_confirm","_callee","token","regenerator_default","wrap","_context","next","signup","_saveUserData","stop","setItem","App","components_Header","react_router","exact","path","component","Boolean","window","location","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","wsLink","WebSocketLink","options","reconnect","connectionParams","split","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19622937.chunk.js","sourcesContent":["export const AUTH_TOKEN = \"auth-token\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { AUTH_TOKEN } from \"../constants\";\nimport \"../styles/App.css\";\n\nclass Header extends Component {\n  render() {\n    const authToken = localStorage.getItem(AUTH_TOKEN);\n    let view = {\n      paddingRight: \"10px\"\n    };\n    let sub = {\n      paddingLeft: \"7px\",\n      paddingRight: \"10px\"\n    };\n    let log = {\n      paddingLeft: \"10px\"\n    };\n    return (\n      <div className=\"header\">\n        <div className=\"title\">\n          <h1>Tech Links Braindump</h1>\n        </div>\n        <div className=\"allOptions\">\n          <div className=\"linkOptions\">\n            <Link to=\"/\" className=\"no-underline options\">\n              <p style={view}>View List</p>\n            </Link>\n\n            {authToken && (\n              <div className=\"submitLink\">\n                <div className=\"\">\n                  <p>|</p>\n                </div>\n                <Link to=\"/create\" className=\"no-underline options\">\n                  <p style={sub}>Submit a Link</p>\n                </Link>\n              </div>\n            )}\n            <p>|</p>\n          </div>\n          <div className=\"log\">\n            {authToken ? (\n              <div\n                className=\"pointer black\"\n                onClick={() => {\n                  localStorage.removeItem(AUTH_TOKEN);\n                  this.props.history.push(`/`);\n                }}\n              >\n                <p style={log}>Logout</p>\n              </div>\n            ) : (\n              <Link to=\"/login\" className=\"no-underline black\">\n                <p style={log}>Login</p>\n              </Link>\n            )}\n          </div>\n        </div>\n        <h4>\n          A collection of interesting tech links, tutorials etc. Sign up and Log\n          in to post and up-vote ▲\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { AUTH_TOKEN } from \"../constants\";\n\nconst VOTE_MUTATION = gql`\n  mutation VoteMutation($linkId: ID!) {\n    vote(linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nclass Link extends Component {\n  render() {\n    const authToken = localStorage.getItem(AUTH_TOKEN);\n    return (\n      <div className=\"flex mt2 items-start\">\n        <div className=\"flex items-center\">\n          <span className=\"gray\">{this.props.index + 1}.</span>\n          {authToken && (\n            <Mutation\n              mutation={VOTE_MUTATION}\n              variables={{ linkId: this.props.link.id }}\n              update={(store, { data: { vote } }) =>\n                this.props.updateStoreAfterVote(store, vote, this.props.link.id)\n              }\n            >\n              {voteMutation => (\n                <div className=\"ml1 gray f11\" onClick={voteMutation}>\n                  ▲\n                </div>\n              )}\n            </Mutation>\n          )}\n        </div>\n        <div className=\"linksToShow\">\n          <div className=\"displayThese\">\n            <div>{this.props.link.description}</div>\n            <p>---</p>\n            <div className=\"theURL\">\n              {\" \"}\n              <a href={this.props.link.url}>({this.props.link.url})</a>\n            </div>\n          </div>\n          <div className=\" lh-copy gray\">\n            {this.props.link.votes.length} votes | posted by{\" \"}\n            {this.props.link.postedBy\n              ? this.props.link.postedBy.name\n              : \"Unknown\"}{\" \"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Link;\n","import React, { Component } from \"react\";\nimport Link from \"./Link\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport \"../styles/App.css\";\n\nexport const FEED_QUERY = gql`\n  query {\n    feed {\n      links {\n        id\n        postedBy {\n          id\n          name\n        }\n        url\n        description\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\nconst NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    newLink {\n      id\n      url\n      description\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\nconst NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    newVote {\n      id\n      link {\n        id\n        url\n        description\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nclass LinkList extends Component {\n  _updateCacheAfterVote = (store, createVote, linkId) => {\n    const data = store.readQuery({ query: FEED_QUERY });\n\n    const votedLink = data.feed.links.find(link => link.id === linkId);\n    votedLink.votes = createVote.link.votes;\n\n    store.writeQuery({ query: FEED_QUERY, data });\n  };\n\n  _subscribeToNewLinks = subscribeToMore => {\n    subscribeToMore({\n      document: NEW_LINKS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const newLink = subscriptionData.data.newLink;\n        const exists = prev.feed.links.find(({ id }) => id === newLink.id);\n        if (exists) return prev;\n\n        return Object.assign({}, prev, {\n          feed: {\n            links: [newLink, ...prev.feed.links],\n            count: prev.feed.links.length + 1,\n            __typename: prev.feed.__typename\n          }\n        });\n      }\n    });\n  };\n  _subscribeToNewVotes = subscribeToMore => {\n    subscribeToMore({\n      document: NEW_VOTES_SUBSCRIPTION\n    });\n  };\n  render() {\n    return (\n      <Query query={FEED_QUERY}>\n        {({ loading, error, data, subscribeToMore }) => {\n          if (loading) return <div>Fetching</div>;\n          if (error) return <div>Error</div>;\n\n          this._subscribeToNewLinks(subscribeToMore);\n          this._subscribeToNewVotes(subscribeToMore);\n\n          const linksToRender = data.feed.links;\n\n          return (\n            <div className=\"\">\n              {linksToRender.map((link, index) => (\n                <Link\n                  key={link.id}\n                  link={link}\n                  index={index}\n                  updateStoreAfterVote={this._updateCacheAfterVote}\n                />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default LinkList;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { FEED_QUERY } from \"./LinkList\";\n\nconst POST_MUTATION = gql`\n  mutation PostMutation($description: String!, $url: String!) {\n    post(description: $description, url: $url) {\n      id\n      url\n      description\n    }\n  }\n`;\nclass CreateLink extends Component {\n  state = {\n    description: \"\",\n    url: \"\"\n  };\n\n  render() {\n    const { description, url } = this.state;\n    return (\n      <div>\n        <div className=\"flex flex-column mt3\">\n          <input\n            className=\"mb2\"\n            value={description}\n            onChange={e => this.setState({ description: e.target.value })}\n            type=\"text\"\n            placeholder=\"A description for the link\"\n          />\n          <input\n            className=\"mb2\"\n            value={url}\n            onChange={e => this.setState({ url: e.target.value })}\n            type=\"text\"\n            placeholder=\"The URL for the link\"\n          />\n        </div>\n        {/* wrap the button in mutation tags bassing the state variables as props */}\n        <Mutation\n          mutation={POST_MUTATION}\n          variables={{ description, url }}\n          onCompleted={() => this.props.history.push(\"/\")}\n          update={(store, { data: { post } }) => {\n            const data = store.readQuery({ query: FEED_QUERY });\n            data.feed.links.unshift(post);\n            store.writeQuery({\n              query: FEED_QUERY,\n              data\n            });\n          }}\n        >\n          {(postMutation, { loading, error }) => {\n            if (loading) {\n              return <p>Saving...</p>;\n            }\n            return <button onClick={postMutation}>Submit</button>;\n          }}\n        </Mutation>\n      </div>\n    );\n  }\n}\n\nexport default CreateLink;\n","import React, { Component } from \"react\";\nimport { AUTH_TOKEN } from \"../constants\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nclass Login extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  };\n\n  render() {\n    const { login, email, password, name } = this.state;\n    return (\n      <div>\n        <h4 className=\"mv3\">{login ? \"Login\" : \"Sign Up\"}</h4>\n        <div className=\"flex flex-column\">\n          {!login && (\n            <input\n              value={name}\n              onChange={e => this.setState({ name: e.target.value })}\n              type=\"text\"\n              placeholder=\"Your name\"\n            />\n          )}\n          <input\n            value={email}\n            onChange={e => this.setState({ email: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your email address\"\n          />\n          <input\n            value={password}\n            onChange={e => this.setState({ password: e.target.value })}\n            type=\"password\"\n            placeholder=\"Your Password\"\n          />\n        </div>\n        <div className=\"flex mt3\">\n          <Mutation\n            mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n            variables={{ email, password, name }}\n            onCompleted={data => this._confirm(data)}\n          >\n            {mutation => (\n              <div className=\"pointer mr2 button\" onClick={mutation}>\n                {login ? \"login\" : \"create account\"}\n              </div>\n            )}\n          </Mutation>\n          <div\n            className=\"pointer button\"\n            onClick={() => this.setState({ login: !login })}\n          >\n            {login ? \"need to create an account?\" : \"already have an account?\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  _confirm = async data => {\n    const { token } = this.state.login ? data.login : data.signup;\n    this._saveUserData(token);\n    this.props.history.push(`/`);\n  };\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token);\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LinkList from \"./LinkList\";\nimport CreateLink from \"./CreateLink\";\nimport Login from \"./Login\";\nimport \"../styles/App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <Header />\n        <div className=\"linkItems background-gray\">\n          <Switch>\n            <Route exact path=\"/\" component={LinkList} />\n            <Route exact path=\"/create\" component={CreateLink} />\n            <Route exact path=\"/login\" component={Login} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// importing the required dependencies into root js file\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setContext } from \"apollo-link-context\";\nimport { AUTH_TOKEN } from \"./constants\";\nimport { split } from \"apollo-link\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\n// create http-link which will connect your Apollo Client instance to your GraphQL API (server)\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000\"\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      authToken: localStorage.getItem(AUTH_TOKEN)\n    }\n  }\n});\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n// Instantiate apollo client, pass the http link, and a new instance of inmemorycache\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n});\n\n// Render root component of the react app. Wrap the root component in the apolloprovider and this gets passed the client as a prop.\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}